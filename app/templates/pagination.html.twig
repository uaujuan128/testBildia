{#
Parameters:
  * currentFilters (array) : associative array that contains the current route-arguments
  * currentPage (int) : the current page you are in
  * paginationPath (string) : the route name to use for links
  * showAlwaysFirstAndLast (bool) : Always show first and last link (just disabled)
  * lastPage (int) : represents the total number of existing pages
#}

{% if currentPage is not defined %}{% set currentPage = max(1, app.request.get('page', 1)|number_format) %}{% endif %}
{% if currentFilters is not defined %}{% set currentFilters = app.request.query.all %}{% endif %}
{% if paginationPath is not defined %}{% set paginationPath = app.request.attributes.get('_route') %}{% endif %}
{% if showAlwaysFirstAndLast is not defined %}{% set showAlwaysFirstAndLast = true %}{% endif %}

{% if lastPage > 1 %}

    {# the number of first and last pages to be displayed #}
    {% set extremePagesLimit = 2 %}
    {# the number of pages that are displayed around the active page #}
    {% set nearbyPagesLimit = 1 %}

    <nav aria-label="Page navigation" class="pagination-bar px-2">
        <ul class="pagination">
            {% if currentPage > 1 %}
                <li class="page-item"><a class="page-link" href="{{ path(paginationPath, currentFilters|merge({page: currentPage-1})) }}">&lt;&lt;</a></li>
                {% for i in range(1, extremePagesLimit)|filter(i => i < currentPage - nearbyPagesLimit )  %}
                    <li class="page-item"><a class="page-link" href="{{ path(paginationPath, currentFilters|merge({page: i})) }}">{{ i }}</a></li>
                {% endfor %}

                {% if extremePagesLimit + 1 < currentPage - nearbyPagesLimit %}
                    <li class="page-item disabled"><span class="page-link">...</span></li>
                {% endif %}

                {% for i in range(currentPage-nearbyPagesLimit, currentPage-1)|filter(i => i > 0) %}
                    <li class="page-item"><a class="page-link" href="{{ path(paginationPath, currentFilters|merge({page: i})) }}">{{ i }}</a></li>
                {% endfor %}
            {% elseif showAlwaysFirstAndLast %}
                <li class="page-item disabled"> <span class="page-link"> &lt;&lt; </span> </li>
            {% endif %}

            <li class="page-item active"><a class="page-link" href="{{ path(paginationPath, currentFilters|merge({ page: currentPage })) }}">{{ currentPage }}</a></li>

            {% if currentPage < lastPage %}
                {% for i in range(currentPage+1, currentPage + nearbyPagesLimit)|filter(i => i <= lastPage)  %}
                    <li class="page-item"><a class="page-link" href="{{ path(paginationPath, currentFilters|merge({page: i})) }}">{{ i }}</a></li>
                {% endfor %}

                {% if  (lastPage - extremePagesLimit) > (currentPage + nearbyPagesLimit) %}
                    <li class="page-item disabled"><span class="page-link">...</span></li>
                {% endif %}

                {% for i in range(lastPage - extremePagesLimit+1, lastPage)|filter(i => i > currentPage + nearbyPagesLimit ) %}
                    <li class="page-item"><a class="page-link" href="{{ path(paginationPath, currentFilters|merge({page: i})) }}">{{ i }}</a></li>
                {% endfor %}

                <li class="page-item"><a class="page-link" href="{{ path(paginationPath, currentFilters|merge({page: currentPage+1})) }}">&gt;&gt;</a></li>
            {% elseif showAlwaysFirstAndLast %}
                <li class="page-item disabled"> <span class="page-link">&gt;&gt;</span> </li>
            {% endif %}
        </ul>
    </nav>
{% endif %}
